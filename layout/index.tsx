import React from 'react'
import Head from 'next/head'
import { Geist, Geist_Mono } from 'next/font/google'
import Link from 'next/link'
import { useRouter } from 'next/router'
import Cookies from 'js-cookie'
import { Toaster } from 'sonner'
import { toast } from 'sonner'
import {
  AlertDialog,
  AlertDialogAction,
  AlertDialogCancel,
  AlertDialogContent,
  AlertDialogFooter,
  AlertDialogHeader,
  AlertDialogTitle,
  AlertDialogTrigger,
} from '@/components/ui/alert-dialog'

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
})

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
})

export default function RootLayout({
  metaTitle,
  children,
}: {
  children: React.ReactNode
  metaTitle?: string
}) {
  const router = useRouter()
  const isAuthentication = Cookies.get('token') || false

  // const handleLogout = async () => {
  //   try {
  //     const token = Cookies.get('token')
  //     const response = await fetch(
  //       `${process.env.NEXT_PUBLIC_API_URL}/api/logout`,
  //       {
  //         method: 'POST',
  //         headers: {
  //           'Content-Type': 'application/json',
  //           Authorization: `Bearer ${token}`,
  //         },
  //       },
  //     )

  //     const result = await response.json()

  //     if (!response.ok) throw new Error(result.message || 'Logout Failed')

  //     Cookies.remove('token')
  //     router.push('/auth/login')
  //   } catch (error) {
  //     console.error('Logout Error', error)
  //   }
  // }

  return (
    <>
      <Head>
        <title>{`DailyNext - ${metaTitle || ''} `}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div
        className={`${geistSans.variable} ${geistMono.variable} flex flex-col min-h-screen`}
      >
        <header className="bg-blue-300 text-white p-4">
          <div className="container mx-auto flex justify-between items-center gap-10">
            <h1 className="text-xl font-bold">Daily Sanber</h1>
            {isAuthentication && (
              <ul className="flex space-x-4 items-center">
                <li className="text-md font-bold">
                  <Link href="/">Home</Link>
                </li>
                <li className="text-md font-bold">
                  <Link href="/profile/me">Profile</Link>
                </li>
                <li className="text-md font-bold">
                  <Link href="/posts/me">My Posts</Link>
                </li>
                <li>
                  <AlertDialog>
                    <AlertDialogTrigger asChild>
                      <button className="text-left text-white hover:bg-red-200 hover:cursor-pointer bg-red-600 px-2 py-1 rounded-lg">
                        Logout
                      </button>
                    </AlertDialogTrigger>
                    <AlertDialogContent>
                      <AlertDialogHeader>
                        <AlertDialogTitle>
                          Are you sure to logout ?
                        </AlertDialogTitle>
                      </AlertDialogHeader>
                      <AlertDialogFooter>
                        <AlertDialogCancel>Cancel</AlertDialogCancel>
                        <AlertDialogAction
                          onClick={() => {
                            Cookies.remove('token')
                            router.push('/auth/login')
                            toast.success('Logout Successfully')
                          }}
                        >
                          Logout
                        </AlertDialogAction>
                      </AlertDialogFooter>
                    </AlertDialogContent>
                  </AlertDialog>
                </li>
              </ul>
            )}
          </div>
        </header>

        <main className="flex-1 container mx-auto p-4">
          {children}
          <Toaster position="top-center"></Toaster>
        </main>

        <footer className="bg-gray-800 text-white p-4 text-center">
          <p>
            &copy; {new Date().getFullYear()} TegarDrajad SanberCode Next JS
          </p>
        </footer>
      </div>
    </>
  )
}
